@model FoodOnline.Domain.Common.PaginatedList<FoodOnline.Application.DTOs.GetDTO.BranchGetDTO>

@{
    ViewData["Title"] = "Branch Index";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
    var selectedStatus = ViewData["Status"]?.ToString();
}




<div class="container-fluid mt-5">
    <form asp-action="Index" method="get" class="form-inline mb-3 row">
       <div class="row d-flex">
            <div class="form-group col-md-4">
            <label for="keywordInput" class="form-label">Keyword</label>
            <input type="text" id="keywordInput" name="keyword" value="@ViewData["Keyword"]" class="form-control" placeholder="Search by name or address" />
        </div>
        <div class="form-group col-md-2">
            <label for="statusSelect" class="form-label">Status</label>
            <select name="Status" class="form-control" id="statusSelect">
                <option value="">All</option>
                <option value="true">Active</option>
                <option value="false">Inactive</option>
            </select>
        </div>
       </div>
       <div class="row d-flex mt-3">
            <div class="form-group col-md-4">
                <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
            </div>
            <div class="form-group col-md-12">
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </div>
       </div>
    </form>


    <div class="mt-5">
        <h2>List Branch</h2>
        <button class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#branch-modal">Add new</button>
        @await Html.PartialAsync("~/Areas/Administration/Views/Branch/_AddModal.cshtml", new FoodOnline.Application.DTOs.PostDTO.BranchPostDTO())
        <table class="table table-striped table-hover mt-5">

            <thead>
                <tr>
                    <th>Name</th>
                    <th>Address</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@(item.IsActive == true ? "Active" : "Inactive")</td>
                        <td>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize" asp-route-keyword="@ViewData["Keyword"]" asp-route-status="@ViewData["Status"]">Previous</a>
                </li>
            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@i" asp-route-pageSize="@Model.PageSize" asp-route-keyword="@ViewData["Keyword"]" asp-route-status="@ViewData["Status"]">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize" asp-route-keyword="@ViewData["Keyword"]" asp-route-status="@ViewData["Status"]">Next</a>
                </li>
            }
        </ul>
    </nav>

</div>

@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Restore the selected option from URL parameters
            const urlParams = new URLSearchParams(window.location.search);
            const savedStatus = urlParams.get('Status');
            if (savedStatus) {
                document.getElementById('statusSelect').value = savedStatus;
            }
        });

        document.getElementById('searchForm').addEventListener('submit', function (event) {
            const statusSelect = document.getElementById('statusSelect');
            const selectedValue = statusSelect.value;

            // Update the form action with the selected status
            const actionUrl = new URL(this.action, window.location.href);
            actionUrl.searchParams.set('Status', selectedValue);
            this.action = actionUrl.href;
        });
    </script>
    <script src="~/js/address.js"></script>
}